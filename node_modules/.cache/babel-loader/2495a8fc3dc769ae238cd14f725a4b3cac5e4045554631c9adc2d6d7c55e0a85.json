{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ripu Rio\\\\Downloads\\\\React\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst specialtiesList = [\"General Physician\", \"Dentist\", \"Dermatologist\", \"Paediatrician\", \"Gynaecologist\", \"ENT\", \"Diabetologist\", \"Cardiologist\", \"Physiotherapist\", \"Endocrinologist\", \"Orthopaedic\", \"Ophthalmologist\", \"Gastroenterologist\", \"Pulmonologist\", \"Psychiatrist\", \"Urologist\", \"Dietitian/Nutritionist\", \"Psychologist\", \"Sexologist\", \"Nephrologist\", \"Neurologist\", \"Oncologist\", \"Ayurveda\", \"Homeopath\"];\nconst App = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [consultationType, setConsultationType] = useState('');\n  const [selectedSpecialties, setSelectedSpecialties] = useState([]);\n  const [sortOption, setSortOption] = useState('');\n\n  // Mock data (replace with API if needed)\n  useEffect(() => {\n    var _params$get;\n    const mockData = [{\n      name: \"Dr. Munaf Inamdar\",\n      specialties: [\"General Physician\"],\n      experience: 33,\n      fee: 700,\n      consultationTypes: [\"Video Consult\", \"In Clinic\"]\n    }, {\n      name: \"Dr. Subhash Bajaj\",\n      specialties: [\"General Physician\", \"Cardiologist\"],\n      experience: 21,\n      fee: 800,\n      consultationTypes: [\"Video Consult\"]\n    }, {\n      name: \"Dr. Mufaddal Zakir\",\n      specialties: [\"General Physician\"],\n      experience: 17,\n      fee: 550,\n      consultationTypes: [\"In Clinic\"]\n    }, {\n      name: \"Dr. Ajay Gangoli\",\n      specialties: [\"General Physician\"],\n      experience: 44,\n      fee: 500,\n      consultationTypes: [\"Video Consult\", \"In Clinic\"]\n    }, {\n      name: \"Dr. Devanshi Chaudhary\",\n      specialties: [\"Dentist\"],\n      experience: 5,\n      fee: 300,\n      consultationTypes: [\"In Clinic\"]\n    }, {\n      name: \"Dr. Devanshi Vaghani\",\n      specialties: [\"Dentist\"],\n      experience: 2,\n      fee: 350,\n      consultationTypes: [\"In Clinic\"]\n    }];\n    setDoctors(mockData);\n    setFilteredDoctors(mockData);\n    const params = new URLSearchParams(window.location.search);\n    setSearchTerm(params.get('search') || '');\n    setConsultationType(params.get('consultation') || '');\n    setSelectedSpecialties(((_params$get = params.get('specialties')) === null || _params$get === void 0 ? void 0 : _params$get.split(',')) || []);\n    setSortOption(params.get('sort') || '');\n  }, []);\n\n  // Handle filter updates\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (searchTerm) params.set('search', searchTerm);\n    if (consultationType) params.set('consultation', consultationType);\n    if (selectedSpecialties.length > 0) params.set('specialties', selectedSpecialties.join(','));\n    if (sortOption) params.set('sort', sortOption);\n    window.history.pushState({}, '', `${window.location.pathname}?${params.toString()}`);\n    applyFilters();\n  }, [searchTerm, consultationType, selectedSpecialties, sortOption]);\n\n  // Handle Back/Forward browser navigation\n  useEffect(() => {\n    const handlePopState = () => {\n      var _params$get2;\n      const params = new URLSearchParams(window.location.search);\n      setSearchTerm(params.get('search') || '');\n      setConsultationType(params.get('consultation') || '');\n      setSelectedSpecialties(((_params$get2 = params.get('specialties')) === null || _params$get2 === void 0 ? void 0 : _params$get2.split(',')) || []);\n      setSortOption(params.get('sort') || '');\n    };\n    window.addEventListener('popstate', handlePopState);\n    return () => window.removeEventListener('popstate', handlePopState);\n  }, []);\n  const applyFilters = () => {\n    let filtered = [...doctors];\n    if (searchTerm) {\n      filtered = filtered.filter(doctor => doctor.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    if (consultationType) {\n      filtered = filtered.filter(doctor => doctor.consultationTypes.includes(consultationType));\n    }\n    if (selectedSpecialties.length > 0) {\n      filtered = filtered.filter(doctor => doctor.specialties.some(s => selectedSpecialties.includes(s)));\n    }\n    if (sortOption === 'fees') {\n      filtered.sort((a, b) => a.fee - b.fee);\n    } else if (sortOption === 'experience') {\n      filtered.sort((a, b) => b.experience - a.experience);\n    }\n    setFilteredDoctors(filtered);\n  };\n  const handleSearchChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    if (value) {\n      const matches = doctors.filter(doctor => doctor.name.toLowerCase().includes(value.toLowerCase())).slice(0, 3);\n      setSuggestions(matches);\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleSuggestionClick = name => {\n    setSearchTerm(name);\n    setSuggestions([]);\n  };\n  const handleConsultationChange = type => {\n    setConsultationType(type);\n  };\n  const handleSpecialtyChange = specialty => {\n    setSelectedSpecialties(prev => prev.includes(specialty) ? prev.filter(s => s !== specialty) : [...prev, specialty]);\n  };\n  const handleSortChange = option => {\n    setSortOption(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"autocomplete-input\",\n        type: \"text\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        placeholder: \"Search doctors...\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"suggestions-list\",\n        children: suggestions.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          \"data-testid\": \"suggestion-item\",\n          onClick: () => handleSuggestionClick(doctor.name),\n          className: \"suggestion-item\",\n          children: doctor.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"filter-header\",\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Sort by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"sort\",\n              value: \"fees\",\n              checked: sortOption === 'fees',\n              onChange: () => handleSortChange('fees')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), \"Fees: Low-High\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"sort\",\n              value: \"experience\",\n              checked: sortOption === 'experience',\n              onChange: () => handleSortChange('experience')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), \"Experience: High-Low\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Mode of Consultation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"consultation\",\n              value: \"Video Consult\",\n              checked: consultationType === 'Video Consult',\n              onChange: () => handleConsultationChange('Video Consult')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), \"Video Consultation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"consultation\",\n              value: \"In Clinic\",\n              checked: consultationType === 'In Clinic',\n              onChange: () => handleConsultationChange('In Clinic')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), \"In Clinic\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-section specialties-scroll\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Specialties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), specialtiesList.map(specialty => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedSpecialties.includes(specialty),\n              onChange: () => handleSpecialtyChange(specialty)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), specialty]\n          }, specialty, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-list\",\n        children: filteredDoctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"doctor-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: doctor.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: doctor.specialties.join(', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [doctor.experience, \" yrs exp.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"doctor-fee\",\n              children: [\"\\u20B9\", doctor.fee]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"book-button\",\n              children: \"Book Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1bGn5PNesMcsJoj1aCWFhHCpXc8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","specialtiesList","App","_s","doctors","setDoctors","filteredDoctors","setFilteredDoctors","searchTerm","setSearchTerm","suggestions","setSuggestions","consultationType","setConsultationType","selectedSpecialties","setSelectedSpecialties","sortOption","setSortOption","_params$get","mockData","name","specialties","experience","fee","consultationTypes","params","URLSearchParams","window","location","search","get","split","set","length","join","history","pushState","pathname","toString","applyFilters","handlePopState","_params$get2","addEventListener","removeEventListener","filtered","filter","doctor","toLowerCase","includes","some","s","sort","a","b","handleSearchChange","e","value","target","matches","slice","handleSuggestionClick","handleConsultationChange","type","handleSpecialtyChange","specialty","prev","handleSortChange","option","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/Ripu Rio/Downloads/React/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst specialtiesList = [\n  \"General Physician\", \"Dentist\", \"Dermatologist\", \"Paediatrician\", \"Gynaecologist\", \"ENT\",\n  \"Diabetologist\", \"Cardiologist\", \"Physiotherapist\", \"Endocrinologist\", \"Orthopaedic\",\n  \"Ophthalmologist\", \"Gastroenterologist\", \"Pulmonologist\", \"Psychiatrist\", \"Urologist\",\n  \"Dietitian/Nutritionist\", \"Psychologist\", \"Sexologist\", \"Nephrologist\", \"Neurologist\",\n  \"Oncologist\", \"Ayurveda\", \"Homeopath\"\n];\n\nconst App = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [consultationType, setConsultationType] = useState('');\n  const [selectedSpecialties, setSelectedSpecialties] = useState([]);\n  const [sortOption, setSortOption] = useState('');\n\n  // Mock data (replace with API if needed)\n  useEffect(() => {\n    const mockData = [\n      { name: \"Dr. Munaf Inamdar\", specialties: [\"General Physician\"], experience: 33, fee: 700, consultationTypes: [\"Video Consult\", \"In Clinic\"] },\n      { name: \"Dr. Subhash Bajaj\", specialties: [\"General Physician\", \"Cardiologist\"], experience: 21, fee: 800, consultationTypes: [\"Video Consult\"] },\n      { name: \"Dr. Mufaddal Zakir\", specialties: [\"General Physician\"], experience: 17, fee: 550, consultationTypes: [\"In Clinic\"] },\n      { name: \"Dr. Ajay Gangoli\", specialties: [\"General Physician\"], experience: 44, fee: 500, consultationTypes: [\"Video Consult\", \"In Clinic\"] },\n      { name: \"Dr. Devanshi Chaudhary\", specialties: [\"Dentist\"], experience: 5, fee: 300, consultationTypes: [\"In Clinic\"] },\n      { name: \"Dr. Devanshi Vaghani\", specialties: [\"Dentist\"], experience: 2, fee: 350, consultationTypes: [\"In Clinic\"] }\n    ];\n    setDoctors(mockData);\n    setFilteredDoctors(mockData);\n\n    const params = new URLSearchParams(window.location.search);\n    setSearchTerm(params.get('search') || '');\n    setConsultationType(params.get('consultation') || '');\n    setSelectedSpecialties(params.get('specialties')?.split(',') || []);\n    setSortOption(params.get('sort') || '');\n  }, []);\n\n  // Handle filter updates\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (searchTerm) params.set('search', searchTerm);\n    if (consultationType) params.set('consultation', consultationType);\n    if (selectedSpecialties.length > 0) params.set('specialties', selectedSpecialties.join(','));\n    if (sortOption) params.set('sort', sortOption);\n\n    window.history.pushState({}, '', `${window.location.pathname}?${params.toString()}`);\n    applyFilters();\n  }, [searchTerm, consultationType, selectedSpecialties, sortOption]);\n\n  // Handle Back/Forward browser navigation\n  useEffect(() => {\n    const handlePopState = () => {\n      const params = new URLSearchParams(window.location.search);\n      setSearchTerm(params.get('search') || '');\n      setConsultationType(params.get('consultation') || '');\n      setSelectedSpecialties(params.get('specialties')?.split(',') || []);\n      setSortOption(params.get('sort') || '');\n    };\n\n    window.addEventListener('popstate', handlePopState);\n    return () => window.removeEventListener('popstate', handlePopState);\n  }, []);\n\n  const applyFilters = () => {\n    let filtered = [...doctors];\n\n    if (searchTerm) {\n      filtered = filtered.filter(doctor =>\n        doctor.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    if (consultationType) {\n      filtered = filtered.filter(doctor =>\n        doctor.consultationTypes.includes(consultationType)\n      );\n    }\n\n    if (selectedSpecialties.length > 0) {\n      filtered = filtered.filter(doctor =>\n        doctor.specialties.some(s => selectedSpecialties.includes(s))\n      );\n    }\n\n    if (sortOption === 'fees') {\n      filtered.sort((a, b) => a.fee - b.fee);\n    } else if (sortOption === 'experience') {\n      filtered.sort((a, b) => b.experience - a.experience);\n    }\n\n    setFilteredDoctors(filtered);\n  };\n\n  const handleSearchChange = (e) => {\n    const value = e.target.value;\n    setSearchTerm(value);\n\n    if (value) {\n      const matches = doctors\n        .filter(doctor => doctor.name.toLowerCase().includes(value.toLowerCase()))\n        .slice(0, 3);\n      setSuggestions(matches);\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleSuggestionClick = (name) => {\n    setSearchTerm(name);\n    setSuggestions([]);\n  };\n\n  const handleConsultationChange = (type) => {\n    setConsultationType(type);\n  };\n\n  const handleSpecialtyChange = (specialty) => {\n    setSelectedSpecialties(prev =>\n      prev.includes(specialty)\n        ? prev.filter(s => s !== specialty)\n        : [...prev, specialty]\n    );\n  };\n\n  const handleSortChange = (option) => {\n    setSortOption(option);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"search-container\">\n        <input\n          data-testid=\"autocomplete-input\"\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n          placeholder=\"Search doctors...\"\n          className=\"search-input\"\n        />\n        {suggestions.length > 0 && (\n          <ul className=\"suggestions-list\">\n            {suggestions.map((doctor, index) => (\n              <li\n                key={index}\n                data-testid=\"suggestion-item\"\n                onClick={() => handleSuggestionClick(doctor.name)}\n                className=\"suggestion-item\"\n              >\n                {doctor.name}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className=\"main-content\">\n        {/* Scrollable Filter Panel */}\n        <div className=\"filter-panel\">\n          <h3 className=\"filter-header\">Filters</h3>\n\n          <div className=\"filter-section\">\n            <h4>Sort by</h4>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"sort\"\n                value=\"fees\"\n                checked={sortOption === 'fees'}\n                onChange={() => handleSortChange('fees')}\n              />\n              Fees: Low-High\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"sort\"\n                value=\"experience\"\n                checked={sortOption === 'experience'}\n                onChange={() => handleSortChange('experience')}\n              />\n              Experience: High-Low\n            </label>\n          </div>\n\n          <div className=\"filter-section\">\n            <h4>Mode of Consultation</h4>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"consultation\"\n                value=\"Video Consult\"\n                checked={consultationType === 'Video Consult'}\n                onChange={() => handleConsultationChange('Video Consult')}\n              />\n              Video Consultation\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"consultation\"\n                value=\"In Clinic\"\n                checked={consultationType === 'In Clinic'}\n                onChange={() => handleConsultationChange('In Clinic')}\n              />\n              In Clinic\n            </label>\n          </div>\n\n          <div className=\"filter-section specialties-scroll\">\n            <h4>Specialties</h4>\n            {specialtiesList.map(specialty => (\n              <label key={specialty}>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedSpecialties.includes(specialty)}\n                  onChange={() => handleSpecialtyChange(specialty)}\n                />\n                {specialty}\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"doctor-list\">\n          {filteredDoctors.map((doctor, index) => (\n            <div key={index} className=\"doctor-card\">\n              <div className=\"doctor-info\">\n                <h3>{doctor.name}</h3>\n                <p>{doctor.specialties.join(', ')}</p>\n                <p>{doctor.experience} yrs exp.</p>\n              </div>\n              <div>\n                <p className=\"doctor-fee\">₹{doctor.fee}</p>\n                <button className=\"book-button\">Book Appointment</button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,eAAe,GAAG,CACtB,mBAAmB,EAAE,SAAS,EAAE,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,KAAK,EACxF,eAAe,EAAE,cAAc,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,aAAa,EACpF,iBAAiB,EAAE,oBAAoB,EAAE,eAAe,EAAE,cAAc,EAAE,WAAW,EACrF,wBAAwB,EAAE,cAAc,EAAE,YAAY,EAAE,cAAc,EAAE,aAAa,EACrF,YAAY,EAAE,UAAU,EAAE,WAAW,CACtC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IAAA,IAAAoB,WAAA;IACd,MAAMC,QAAQ,GAAG,CACf;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,WAAW,EAAE,CAAC,mBAAmB,CAAC;MAAEC,UAAU,EAAE,EAAE;MAAEC,GAAG,EAAE,GAAG;MAAEC,iBAAiB,EAAE,CAAC,eAAe,EAAE,WAAW;IAAE,CAAC,EAC9I;MAAEJ,IAAI,EAAE,mBAAmB;MAAEC,WAAW,EAAE,CAAC,mBAAmB,EAAE,cAAc,CAAC;MAAEC,UAAU,EAAE,EAAE;MAAEC,GAAG,EAAE,GAAG;MAAEC,iBAAiB,EAAE,CAAC,eAAe;IAAE,CAAC,EACjJ;MAAEJ,IAAI,EAAE,oBAAoB;MAAEC,WAAW,EAAE,CAAC,mBAAmB,CAAC;MAAEC,UAAU,EAAE,EAAE;MAAEC,GAAG,EAAE,GAAG;MAAEC,iBAAiB,EAAE,CAAC,WAAW;IAAE,CAAC,EAC9H;MAAEJ,IAAI,EAAE,kBAAkB;MAAEC,WAAW,EAAE,CAAC,mBAAmB,CAAC;MAAEC,UAAU,EAAE,EAAE;MAAEC,GAAG,EAAE,GAAG;MAAEC,iBAAiB,EAAE,CAAC,eAAe,EAAE,WAAW;IAAE,CAAC,EAC7I;MAAEJ,IAAI,EAAE,wBAAwB;MAAEC,WAAW,EAAE,CAAC,SAAS,CAAC;MAAEC,UAAU,EAAE,CAAC;MAAEC,GAAG,EAAE,GAAG;MAAEC,iBAAiB,EAAE,CAAC,WAAW;IAAE,CAAC,EACvH;MAAEJ,IAAI,EAAE,sBAAsB;MAAEC,WAAW,EAAE,CAAC,SAAS,CAAC;MAAEC,UAAU,EAAE,CAAC;MAAEC,GAAG,EAAE,GAAG;MAAEC,iBAAiB,EAAE,CAAC,WAAW;IAAE,CAAC,CACtH;IACDnB,UAAU,CAACc,QAAQ,CAAC;IACpBZ,kBAAkB,CAACY,QAAQ,CAAC;IAE5B,MAAMM,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC1DpB,aAAa,CAACgB,MAAM,CAACK,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzCjB,mBAAmB,CAACY,MAAM,CAACK,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IACrDf,sBAAsB,CAAC,EAAAG,WAAA,GAAAO,MAAM,CAACK,GAAG,CAAC,aAAa,CAAC,cAAAZ,WAAA,uBAAzBA,WAAA,CAA2Ba,KAAK,CAAC,GAAG,CAAC,KAAI,EAAE,CAAC;IACnEd,aAAa,CAACQ,MAAM,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhC,SAAS,CAAC,MAAM;IACd,MAAM2B,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIlB,UAAU,EAAEiB,MAAM,CAACO,GAAG,CAAC,QAAQ,EAAExB,UAAU,CAAC;IAChD,IAAII,gBAAgB,EAAEa,MAAM,CAACO,GAAG,CAAC,cAAc,EAAEpB,gBAAgB,CAAC;IAClE,IAAIE,mBAAmB,CAACmB,MAAM,GAAG,CAAC,EAAER,MAAM,CAACO,GAAG,CAAC,aAAa,EAAElB,mBAAmB,CAACoB,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5F,IAAIlB,UAAU,EAAES,MAAM,CAACO,GAAG,CAAC,MAAM,EAAEhB,UAAU,CAAC;IAE9CW,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,GAAGT,MAAM,CAACC,QAAQ,CAACS,QAAQ,IAAIZ,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC;IACpFC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAAC/B,UAAU,EAAEI,gBAAgB,EAAEE,mBAAmB,EAAEE,UAAU,CAAC,CAAC;;EAEnE;EACAlB,SAAS,CAAC,MAAM;IACd,MAAM0C,cAAc,GAAGA,CAAA,KAAM;MAAA,IAAAC,YAAA;MAC3B,MAAMhB,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAC1DpB,aAAa,CAACgB,MAAM,CAACK,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;MACzCjB,mBAAmB,CAACY,MAAM,CAACK,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;MACrDf,sBAAsB,CAAC,EAAA0B,YAAA,GAAAhB,MAAM,CAACK,GAAG,CAAC,aAAa,CAAC,cAAAW,YAAA,uBAAzBA,YAAA,CAA2BV,KAAK,CAAC,GAAG,CAAC,KAAI,EAAE,CAAC;MACnEd,aAAa,CAACQ,MAAM,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IACzC,CAAC;IAEDH,MAAM,CAACe,gBAAgB,CAAC,UAAU,EAAEF,cAAc,CAAC;IACnD,OAAO,MAAMb,MAAM,CAACgB,mBAAmB,CAAC,UAAU,EAAEH,cAAc,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIK,QAAQ,GAAG,CAAC,GAAGxC,OAAO,CAAC;IAE3B,IAAII,UAAU,EAAE;MACdoC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,MAAM,IAC/BA,MAAM,CAAC1B,IAAI,CAAC2B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxC,UAAU,CAACuC,WAAW,CAAC,CAAC,CAC7D,CAAC;IACH;IAEA,IAAInC,gBAAgB,EAAE;MACpBgC,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,MAAM,IAC/BA,MAAM,CAACtB,iBAAiB,CAACwB,QAAQ,CAACpC,gBAAgB,CACpD,CAAC;IACH;IAEA,IAAIE,mBAAmB,CAACmB,MAAM,GAAG,CAAC,EAAE;MAClCW,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,MAAM,IAC/BA,MAAM,CAACzB,WAAW,CAAC4B,IAAI,CAACC,CAAC,IAAIpC,mBAAmB,CAACkC,QAAQ,CAACE,CAAC,CAAC,CAC9D,CAAC;IACH;IAEA,IAAIlC,UAAU,KAAK,MAAM,EAAE;MACzB4B,QAAQ,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC7B,GAAG,GAAG8B,CAAC,CAAC9B,GAAG,CAAC;IACxC,CAAC,MAAM,IAAIP,UAAU,KAAK,YAAY,EAAE;MACtC4B,QAAQ,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC/B,UAAU,GAAG8B,CAAC,CAAC9B,UAAU,CAAC;IACtD;IAEAf,kBAAkB,CAACqC,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMU,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B/C,aAAa,CAAC+C,KAAK,CAAC;IAEpB,IAAIA,KAAK,EAAE;MACT,MAAME,OAAO,GAAGtD,OAAO,CACpByC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAAC1B,IAAI,CAAC2B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACQ,KAAK,CAACT,WAAW,CAAC,CAAC,CAAC,CAAC,CACzEY,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACdhD,cAAc,CAAC+C,OAAO,CAAC;IACzB,CAAC,MAAM;MACL/C,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMiD,qBAAqB,GAAIxC,IAAI,IAAK;IACtCX,aAAa,CAACW,IAAI,CAAC;IACnBT,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMkD,wBAAwB,GAAIC,IAAI,IAAK;IACzCjD,mBAAmB,CAACiD,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMC,qBAAqB,GAAIC,SAAS,IAAK;IAC3CjD,sBAAsB,CAACkD,IAAI,IACzBA,IAAI,CAACjB,QAAQ,CAACgB,SAAS,CAAC,GACpBC,IAAI,CAACpB,MAAM,CAACK,CAAC,IAAIA,CAAC,KAAKc,SAAS,CAAC,GACjC,CAAC,GAAGC,IAAI,EAAED,SAAS,CACzB,CAAC;EACH,CAAC;EAED,MAAME,gBAAgB,GAAIC,MAAM,IAAK;IACnClD,aAAa,CAACkD,MAAM,CAAC;EACvB,CAAC;EAED,oBACEnE,OAAA;IAAKoE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBrE,OAAA;MAAKoE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BrE,OAAA;QACE,eAAY,oBAAoB;QAChC8D,IAAI,EAAC,MAAM;QACXN,KAAK,EAAEhD,UAAW;QAClB8D,QAAQ,EAAEhB,kBAAmB;QAC7BiB,WAAW,EAAC,mBAAmB;QAC/BH,SAAS,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EACDjE,WAAW,CAACuB,MAAM,GAAG,CAAC,iBACrBjC,OAAA;QAAIoE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC7B3D,WAAW,CAACkE,GAAG,CAAC,CAAC9B,MAAM,EAAE+B,KAAK,kBAC7B7E,OAAA;UAEE,eAAY,iBAAiB;UAC7B8E,OAAO,EAAEA,CAAA,KAAMlB,qBAAqB,CAACd,MAAM,CAAC1B,IAAI,CAAE;UAClDgD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAE1BvB,MAAM,CAAC1B;QAAI,GALPyD,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN3E,OAAA;MAAKoE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3BrE,OAAA;QAAKoE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BrE,OAAA;UAAIoE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE1C3E,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BrE,OAAA;YAAAqE,QAAA,EAAI;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB3E,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cACE8D,IAAI,EAAC,OAAO;cACZ1C,IAAI,EAAC,MAAM;cACXoC,KAAK,EAAC,MAAM;cACZuB,OAAO,EAAE/D,UAAU,KAAK,MAAO;cAC/BsD,QAAQ,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,MAAM;YAAE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C,CAAC,kBAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR3E,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cACE8D,IAAI,EAAC,OAAO;cACZ1C,IAAI,EAAC,MAAM;cACXoC,KAAK,EAAC,YAAY;cAClBuB,OAAO,EAAE/D,UAAU,KAAK,YAAa;cACrCsD,QAAQ,EAAEA,CAAA,KAAMJ,gBAAgB,CAAC,YAAY;YAAE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,wBAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN3E,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BrE,OAAA;YAAAqE,QAAA,EAAI;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7B3E,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cACE8D,IAAI,EAAC,OAAO;cACZ1C,IAAI,EAAC,cAAc;cACnBoC,KAAK,EAAC,eAAe;cACrBuB,OAAO,EAAEnE,gBAAgB,KAAK,eAAgB;cAC9C0D,QAAQ,EAAEA,CAAA,KAAMT,wBAAwB,CAAC,eAAe;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC,sBAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR3E,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cACE8D,IAAI,EAAC,OAAO;cACZ1C,IAAI,EAAC,cAAc;cACnBoC,KAAK,EAAC,WAAW;cACjBuB,OAAO,EAAEnE,gBAAgB,KAAK,WAAY;cAC1C0D,QAAQ,EAAEA,CAAA,KAAMT,wBAAwB,CAAC,WAAW;YAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD,CAAC,aAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN3E,OAAA;UAAKoE,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChDrE,OAAA;YAAAqE,QAAA,EAAI;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACnB1E,eAAe,CAAC2E,GAAG,CAACZ,SAAS,iBAC5BhE,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cACE8D,IAAI,EAAC,UAAU;cACfiB,OAAO,EAAEjE,mBAAmB,CAACkC,QAAQ,CAACgB,SAAS,CAAE;cACjDM,QAAQ,EAAEA,CAAA,KAAMP,qBAAqB,CAACC,SAAS;YAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,EACDX,SAAS;UAAA,GANAA,SAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOd,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN3E,OAAA;QAAKoE,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzB/D,eAAe,CAACsE,GAAG,CAAC,CAAC9B,MAAM,EAAE+B,KAAK,kBACjC7E,OAAA;UAAiBoE,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACtCrE,OAAA;YAAKoE,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BrE,OAAA;cAAAqE,QAAA,EAAKvB,MAAM,CAAC1B;YAAI;cAAAoD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtB3E,OAAA;cAAAqE,QAAA,EAAIvB,MAAM,CAACzB,WAAW,CAACa,IAAI,CAAC,IAAI;YAAC;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtC3E,OAAA;cAAAqE,QAAA,GAAIvB,MAAM,CAACxB,UAAU,EAAC,WAAS;YAAA;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACN3E,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cAAGoE,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,QAAC,EAACvB,MAAM,CAACvB,GAAG;YAAA;cAAAiD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3C3E,OAAA;cAAQoE,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAAgB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA,GATEE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxE,EAAA,CAzOID,GAAG;AAAA8E,EAAA,GAAH9E,GAAG;AA2OT,eAAeA,GAAG;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}